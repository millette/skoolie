---
// npm
import { SEO } from "astro-seo"
// import type { Link } from "astro-seo"

// astro
import { ViewTransitions } from 'astro:transitions'

// self
import Footer from "@components/footer.astro"
import FooterEn from "@components/footer-en.astro"
import { price, prix } from "@libs/constants.js"

export interface Props {
	title: string
	url: string
	description?: string
	lang?: string
}

const { url, title } = Astro.props
let { description } = Astro.props
const { origin } = Astro.site as URL
const image = origin + '/20230628_164933-crop.webp'
const lang = Astro.url.pathname.startsWith("/en/") ? "en" : "fr"
const hreflang = (Astro.url.pathname.startsWith("/en/") ? "fr" : "en") + "-ca"
let alternateUrl
let withTransition = true

switch (url) {
	case "/":
	alternateUrl = "/en/"
	break

	case "/en/":
	alternateUrl = "/"
	break

	case "/details/":
	alternateUrl = "/en/details/"
	break

	case "/en/details/":
	alternateUrl = "/details/"
	break

	case "/faq/":
	alternateUrl = "/en/faq/"
	withTransition = false
	break

	case "/en/faq/":
	alternateUrl = "/faq/"
	withTransition = false
	break

	case "/album/under/":
	alternateUrl = "/en/album/under/"
	break

	case "/en/album/under/":
	alternateUrl = "/album/under/"
	break

	case "/album/inside/":
	alternateUrl = "/en/album/inside/"
	break

	case "/en/album/inside/":
	alternateUrl = "/album/inside/"
	break

	case "/album/outside/":
	alternateUrl = "/en/album/outside/"
	break

	case "/en/album/outside/":
	alternateUrl = "/album/outside/"
	break

	case "/album/details/":
	alternateUrl = "/en/album/details/"
	break

	case "/en/album/details/":
	alternateUrl = "/album/details/"
	break

	case "/guides/":
	alternateUrl = "/en/guides/"
	break

	case "/en/guides/":
	alternateUrl = "/guides/"
	break

	default:
		throw new Error(`Missing url translation for "${url}"`)
}

if (alternateUrl) alternateUrl = origin + alternateUrl

if (!description) description = (lang === "fr")
	? `À vendre ${prix}: autobus 38' (plaqué véhicule lourd, classe 3) en conversion vers un VR pour le plaquer classe 5.`
	: `For sale ${price}: 38' bus (immatriculated heavy vehicule, class 3 permit) being converted into an RV requiring class 5 permit to drive.`

// const link: { rel: string, sizes?: string | DOMTokenList | undefined, href: string, hreflang?: string, color?: string, type?: string }[] = [
// const link: Partial<Link>[] = [
const link: any = [
	{ rel: "icon", href: "/favicon.ico" },
	{ rel: "apple-touch-icon", sizes: "180x180", href: "/apple-touch-icon.png" },
	{ rel: "icon", type: "image/png", sizes: "32x32", href: "/favicon-32x32.png" },
	{ rel: "icon", type: "image/png", sizes: "16x16", href: "/favicon-16x16.png" },
	{ rel: "manifest", href: "/site.webmanifest" },
	{ rel: "mask-icon", href: "/safari-pinned-tab.svg", color: "#5bbad5" },
	{ rel: "sitemap", href: "/sitemap-index.xml" },
]

if (alternateUrl && hreflang)
  link.push({ rel: "alternate", hreflang, href: alternateUrl })

---

<!DOCTYPE html>
<html lang={lang}>
	<head>
    <SEO
		charset="UTF-8"
      title={title}
      description={description}
      openGraph={{
        image: {
          alt: "Skoolie: intérieur/inside",
        },
        basic: {
          title,
          type: "website",
          image,
        },
        optional: {
          description
        }
      }}
      extend={{
        link,
        meta: [
					{ name: "viewport", content: "width=device-width" },
					{ name: "msapplication-TileColor", content: "#da532c" },
					{ name: "theme-color", content: "#ffffff" },
					{ name: "generator", content: Astro.generator },
        ],
      }}
    />
		{withTransition && <ViewTransitions />}
	</head>
	<body>
		<div class="container mx-auto p-4">
		  <slot />
		</div>
		{lang === 'fr' ? <Footer /> : <FooterEn />}
	</body>
</html>
